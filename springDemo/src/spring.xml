<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">

<beans>

<!-- 	<bean id="triangle" class="org.vikas.Triangle">
		<constructor-arg value="LijName"></constructor-arg>
		<constructor-arg value="20"></constructor-arg> 
	Based on the number of the constructor-arg nodes the constructor will get called. 
	    type, index  parameters are optional in the constructor-arg node. 
	    It would be usefull in-case of multiple parameters constructor having same type. 	
	   
		<property name="type" value="Quilateral"/>
	</bean>
 -->
 
 <!-- Object injection  -->
 <!-- init-method destroy-method are two methods where 
 	we can mention the method name to call during the creation and destruction of the bean -->
 	
 <bean id="triangle" class="org.vikas.Triangle">
 	
 	<!-- ref attribute generally matches ref based on id, name ... etc. To restrict the ref only to id we can 
 	make use of idref node inside the property node which would throw exception in-case of no id ref found  -->
 	
 	<!--  id ref is not working in my environment for some reason. This is procedure to make use of it-->
<!--  	<property name="pointA">
 		<idref=ZeroPoint/>
 	</property>
 --> 	
 	<property name="pointA" ref="ZeroPoint"/>
 	<!-- Innear Beans: Inner beans doesn't need any name as it would be only accessible from the parent property
 	 therefore parent property node doesn't need any ref attribute  -->
 	<property name="pointB">
 	 	 <bean class="org.vikas.Point">
 			<property name="x" value="1"></property>
 			<property name="y" value="0"></property>
 		</bean>
 	</property>
 	
 	<property name="pointC" >
 	 	 <bean name="TwoPoint" class="org.vikas.Point" >
 			<property name="x" value="2"></property>
 			<property name="y" value="1"></property>
 		</bean>
 	</property>
 	
 </bean>
 
 	<bean id="ZeroPoint" class="org.vikas.Point" >
 		<property name="x" value="0"></property>
 		<property name="y" value="-2"></property>
 	</bean>
 	
 	<!-- Alias tag can be used to access the bean with multiple names  -->
 	<alias name="triangle" alias="triangle-alias"/>
</beans>